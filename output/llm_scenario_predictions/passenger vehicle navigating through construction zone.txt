description = 'passenger vehicle navigating through construction zone'

# Get regular vehicles and construction objects
vehicles = get_objects_of_category(log_dir, category="REGULAR_VEHICLE")
cones = get_objects_of_category(log_dir, category="CONSTRUCTION_CONE")
barrels = get_objects_of_category(log_dir, category="CONSTRUCTION_BARREL")

# Combine all construction objects into one scenario
construction_objects = scenario_or([cones, barrels])

# Get moving vehicles (exclude parked/stopped vehicles)
moving_vehicles = scenario_not(stationary)(vehicles, log_dir)

# Find vehicles that have construction objects nearby (within 10m)
# Using near_objects with min_objects=2 ensures multiple construction objects are present
vehicles_near_construction = near_objects(moving_vehicles, construction_objects, log_dir, 
                                       distance_thresh=10, min_objects=2)

# Find vehicles that have construction objects on both sides
# This helps identify vehicles actually navigating through a construction zone
vehicles_with_construction_left = has_objects_in_relative_direction(
    vehicles_near_construction, construction_objects, log_dir, 
    direction='left', within_distance=10)
vehicles_with_construction_right = has_objects_in_relative_direction(
    vehicles_near_construction, construction_objects, log_dir, 
    direction='right', within_distance=10)

# Combine conditions - vehicles must have construction objects on both sides
vehicles_in_construction = scenario_and([
    vehicles_with_construction_left,
    vehicles_with_construction_right
])

output_scenario(vehicles_in_construction, description, log_dir, output_dir, is_gt=False)