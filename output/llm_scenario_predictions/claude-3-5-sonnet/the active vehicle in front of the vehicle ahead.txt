description = 'the active vehicle in front of the vehicle ahead'

# Get all vehicles
vehicles = get_objects_of_category(log_dir, category='VEHICLE')

# Filter for moving vehicles only
moving_vehicles = scenario_not(stationary)(vehicles, log_dir)

# Get vehicles that have another vehicle directly in front of them
# Using 25m as a reasonable following distance
vehicles_with_lead = has_objects_in_relative_direction(
    moving_vehicles, 
    moving_vehicles, 
    log_dir, 
    direction='forward',
    max_number=1,
    within_distance=25
)

# From those lead vehicles, get the ones that also have a vehicle in front of them
# This effectively finds vehicles that are the middle of a 3-vehicle chain
vehicles_with_two_ahead = has_objects_in_relative_direction(
    vehicles_with_lead,
    moving_vehicles,
    log_dir,
    direction='forward', 
    max_number=1,
    within_distance=25
)

# Get the vehicles that are in front of the middle vehicles
# These are our target vehicles - the "active vehicle in front of the vehicle ahead"
front_of_chain = get_objects_in_relative_direction(
    vehicles_with_two_ahead,
    moving_vehicles,
    log_dir,
    direction='forward',
    max_number=1,
    within_distance=25
)

output_scenario(front_of_chain, description, log_dir, output_dir)