description = 'bicycle passing parked vehicle'

# Get all bicycles and vehicles
bicycles = get_objects_of_category(log_dir, category='BICYCLE') 
vehicles = get_objects_of_category(log_dir, category='VEHICLE')

# Find parked vehicles that are in a drivable area
parked_vehicles = stationary(vehicles, log_dir)
parked_vehicles_on_road = in_drivable_area(parked_vehicles, log_dir)

# Get moving bicycles (not parked/stationary)
moving_bicycles = scenario_not(stationary)(bicycles, log_dir)

# Find bicycles that are passing (crossing by) parked vehicles
# Using being_crossed_by with direction='left' or 'right' to capture passing on either side
# forward_thresh=3 means checking 3m ahead/behind the parked vehicle
# lateral_thresh=2 means checking 2m to the side of the parked vehicle for the bicycle
bicycles_passing_left = being_crossed_by(parked_vehicles_on_road, moving_bicycles, log_dir, 
                                       direction='left', forward_thresh=3, lateral_thresh=2)
bicycles_passing_right = being_crossed_by(parked_vehicles_on_road, moving_bicycles, log_dir, 
                                        direction='right', forward_thresh=3, lateral_thresh=2)

# Combine passes on either side using scenario_or
bicycles_passing = reverse_relationship(scenario_or)([bicycles_passing_left, bicycles_passing_right])

output_scenario(bicycles_passing, description, log_dir, output_dir)