description = 'ego vehicle approaching construction barrels with a vehicle turning right ahead'

# Get ego vehicle and construction barrels
ego = get_objects_of_category(log_dir, category='EGO_VEHICLE')
barrels = get_objects_of_category(log_dir, category='CONSTRUCTION_BARREL')

# Get vehicles that are in front of ego vehicle
vehicles = get_objects_of_category(log_dir, category='VEHICLE') 
vehicles_ahead = get_objects_in_relative_direction(ego, vehicles, log_dir, 
                                                 direction='forward',
                                                 max_number=1,
                                                 within_distance=30)

# Find vehicles that are turning right
turning_vehicles = turning(vehicles_ahead, log_dir, direction='right')

# Get ego vehicle timestamps where:
# 1. There are construction barrels ahead
# 2. There is a vehicle turning right ahead
ego_approaching = scenario_and([
    # Ego has barrels ahead
    has_objects_in_relative_direction(ego, barrels, log_dir, 
                                    direction='forward',
                                    min_number=1),
    # Ego has turning vehicle ahead                                
    has_objects_in_relative_direction(ego, turning_vehicles, log_dir,
                                    direction='forward', 
                                    min_number=1)
])

output_scenario(ego_approaching, description, log_dir, output_dir)