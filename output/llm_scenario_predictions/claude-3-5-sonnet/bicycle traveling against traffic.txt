description = 'bicycle traveling against traffic'

# Get all bicycles and their riders
bicycles = get_objects_of_category(log_dir, category='BICYCLE') 
bicyclists = get_objects_of_category(log_dir, category='BICYCLIST')
all_bikes = scenario_or([bicycles, bicyclists])

# Get vehicles to determine direction of traffic flow
vehicles = get_objects_of_category(log_dir, category='VEHICLE')
moving_vehicles = scenario_not(stationary)(vehicles, log_dir)

# Find bikes that have vehicles coming toward them within 20m
# This indicates the bike is going against traffic since vehicles should be going the same direction
bikes_with_oncoming_traffic = has_objects_in_relative_direction(
    all_bikes,
    moving_vehicles, 
    log_dir,
    direction='forward',
    within_distance=20
)

# Make sure bikes are actually moving and in a drivable area
moving_bikes = scenario_not(stationary)(all_bikes, log_dir)
bikes_on_road = in_drivable_area(moving_bikes, log_dir)

# Combine conditions - bikes must be moving, on road, and have oncoming traffic
wrong_way_bikes = scenario_and([bikes_with_oncoming_traffic, bikes_on_road])

output_scenario(wrong_way_bikes, description, log_dir, output_dir, is_gt=False)