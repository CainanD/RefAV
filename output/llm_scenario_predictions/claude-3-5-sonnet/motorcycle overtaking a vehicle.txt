description = 'motorcycle overtaking a vehicle'

# Get all motorcycles and vehicles
motorcycles = get_objects_of_category(log_dir, category='MOTORCYCLE')
vehicles = get_objects_of_category(log_dir, category='REGULAR_VEHICLE')

# Filter for moving motorcycles and vehicles
moving_motorcycles = scenario_not(stationary)(motorcycles, log_dir)
moving_vehicles = scenario_not(stationary)(vehicles, log_dir)

# Identify motorcycles that are crossing past vehicles on either side
# Using being_crossed_by to detect when the motorcycle's centroid crosses 
# the midplane of the vehicle on either the left or right side
# forward_thresh=10 means check 10m ahead/behind the vehicle
# lateral_thresh=5 means continue considering it an overtake until motorcycle
# is 5m laterally away from the vehicle's midplane
overtaking_left = being_crossed_by(moving_vehicles, moving_motorcycles, log_dir, 
                                 direction='left', 
                                 forward_thresh=10,
                                 lateral_thresh=5)
overtaking_right = being_crossed_by(moving_vehicles, moving_motorcycles, log_dir,
                                  direction='right',
                                  forward_thresh=10, 
                                  lateral_thresh=5)

# Combine overtaking from either direction
overtaking_motorcycles = reverse_relationship(scenario_or)([overtaking_left, overtaking_right])

output_scenario(overtaking_motorcycles, description, log_dir, output_dir)