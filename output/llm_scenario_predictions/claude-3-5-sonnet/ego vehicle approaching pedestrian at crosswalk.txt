description = 'ego vehicle approaching pedestrian at crosswalk'

# Get ego vehicle and pedestrians
ego = get_objects_of_category(log_dir, category='EGO_VEHICLE')
peds = get_objects_of_category(log_dir, category='PEDESTRIAN')

# Find pedestrians at crosswalks
peds_at_crossing = at_pedestrian_crossing(peds, log_dir)

# Find pedestrians that are in front of the ego vehicle within 20m
# This represents the "approaching" part of the scenario
peds_in_front = get_objects_in_relative_direction(
    ego, 
    peds_at_crossing,
    log_dir,
    direction='forward',
    within_distance=20
)

# The ego vehicle must be moving (not stationary) to be "approaching"
moving_ego = scenario_not(stationary)(ego, log_dir)

# Combine conditions: moving ego vehicle with pedestrians at crosswalk in front
ego_approaching_ped = has_objects_in_relative_direction(
    moving_ego,
    peds_in_front,
    log_dir, 
    direction='forward',
    min_number=1,
    within_distance=20
)

output_scenario(ego_approaching_ped, description, log_dir, output_dir)