description = 'bicycle and vehicle traveling in bike lane'

# Get all bicycles and vehicles
bicycles = get_objects_of_category(log_dir, category='BICYCLE') 
vehicles = get_objects_of_category(log_dir, category='VEHICLE')

# Filter for moving objects only (exclude parked/stopped)
moving_bicycles = scenario_not(stationary)(bicycles, log_dir)
moving_vehicles = scenario_not(stationary)(vehicles, log_dir)

# Find bicycles and vehicles in bike lanes
bicycles_in_bike_lane = on_lane_type(moving_bicycles, log_dir, lane_type='BIKE')
vehicles_in_bike_lane = on_lane_type(moving_vehicles, log_dir, lane_type='BIKE')

# Find vehicles that are in the same lane as bicycles
vehicles_with_bicycle = in_same_lane(vehicles_in_bike_lane, bicycles_in_bike_lane, log_dir)

# Get the corresponding bicycles that are sharing their lane with a vehicle
bicycles_with_vehicle = reverse_relationship(in_same_lane)(vehicles_with_bicycle, bicycles_in_bike_lane, log_dir)

# Combine both sets of objects into one scenario
bike_and_vehicle_in_bike_lane = scenario_or([vehicles_with_bicycle, bicycles_with_vehicle])

output_scenario(bike_and_vehicle_in_bike_lane, description, log_dir, output_dir)