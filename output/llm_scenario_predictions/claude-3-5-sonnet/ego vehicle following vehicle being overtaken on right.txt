description = 'ego vehicle following vehicle being overtaken on right'

# Get ego vehicle and regular vehicles
ego = get_objects_of_category(log_dir, category='EGO_VEHICLE')
vehicles = get_objects_of_category(log_dir, category='VEHICLE')

# Get moving vehicles only
moving_vehicles = scenario_not(stationary)(vehicles, log_dir)

# Find vehicles being overtaken on their right side
# Using forward_thresh=10 to consider vehicles within 10m front/back during overtaking
# Using lateral_thresh=5 to track the overtaking until vehicle is 5m to the side
vehicles_being_overtaken = being_crossed_by(moving_vehicles, moving_vehicles, log_dir, 
                                          direction='right', 
                                          forward_thresh=10,
                                          lateral_thresh=5)

# Find ego vehicle following a vehicle that's being overtaken
# Using within_distance=25 as reasonable following distance
# Using max_number=1 to get the closest vehicle ahead
ego_following_overtaken = get_objects_in_relative_direction(ego, vehicles_being_overtaken, 
                                                          log_dir,
                                                          direction='forward',
                                                          max_number=1,
                                                          within_distance=25)

output_scenario(ego_following_overtaken, description, log_dir, output_dir)