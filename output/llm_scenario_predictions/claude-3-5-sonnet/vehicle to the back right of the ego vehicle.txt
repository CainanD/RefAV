description = 'vehicle to the back right of the ego vehicle'

# Get ego vehicle and all other vehicles
ego = get_objects_of_category(log_dir, category='EGO_VEHICLE')
vehicles = get_objects_of_category(log_dir, category='VEHICLE')

# Find vehicles that are to the back right of the ego vehicle
# Using get_objects_in_relative_direction to find vehicles in the back right direction
# Setting reasonable distance thresholds:
# - within_distance=20 means we only consider vehicles within 20m
# - lateral_thresh=5 means the vehicle can't be more than 5m laterally offset
vehicles_back_right = get_objects_in_relative_direction(
    ego, 
    vehicles, 
    log_dir,
    direction='right',  # Looking to the right
    min_number=1,  # Must have at least 1 vehicle
    within_distance=20,  # Within 20m
    lateral_thresh=5  # Not more than 5m lateral offset
)

# Further filter to ensure these vehicles are behind the ego
vehicles_back_right = get_objects_in_relative_direction(
    ego,
    vehicles_back_right,
    log_dir, 
    direction='backward',  # Looking backward
    min_number=1,  # Must have at least 1 vehicle
    within_distance=20,  # Within 20m
    lateral_thresh=5  # Not more than 5m lateral offset
)

output_scenario(vehicles_back_right, description, log_dir, output_dir)