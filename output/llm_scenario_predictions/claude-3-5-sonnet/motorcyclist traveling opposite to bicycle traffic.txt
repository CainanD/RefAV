description = 'motorcyclist traveling opposite to bicycle traffic'

# Get all motorcycles and bicycles
motorcycles = get_objects_of_category(log_dir, category='MOTORCYCLE')
bicycles = get_objects_of_category(log_dir, category='BICYCLE')

# Only consider moving vehicles since we want to capture active traffic situations
moving_motorcycles = scenario_not(stationary)(motorcycles, log_dir)
moving_bicycles = scenario_not(stationary)(bicycles, log_dir)

# We want motorcycles that have bicycles in front of them (from motorcycle's perspective)
# but the bicycles should be traveling in the opposite direction
# Using being_crossed_by to detect when paths intersect, indicating opposite direction travel
motorcycles_crossing_bicycles = being_crossed_by(moving_motorcycles, moving_bicycles, log_dir, 
                                               direction='forward', 
                                               forward_thresh=10,  # Look 10m ahead
                                               lateral_thresh=3)   # Within 3m laterally

# Make sure both vehicles are on the road
motorcycles_on_road = on_road(motorcycles_crossing_bicycles, log_dir)

output_scenario(motorcycles_on_road, description, log_dir, output_dir)