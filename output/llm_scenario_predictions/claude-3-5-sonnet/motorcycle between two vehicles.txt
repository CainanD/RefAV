description = 'motorcycle between two vehicles'

# Get all motorcycles and vehicles
motorcycles = get_objects_of_category(log_dir, category='MOTORCYCLE')
vehicles = get_objects_of_category(log_dir, category='VEHICLE')

# Only consider moving motorcycles on the road to avoid parked vehicles
moving_motorcycles = scenario_and([
    scenario_not(stationary)(motorcycles, log_dir),
    on_road(motorcycles, log_dir)
])

# Find motorcycles that have vehicles within 5m on both sides
# First find motorcycles with vehicles on their left
motorcycles_with_left = has_objects_in_relative_direction(
    moving_motorcycles, 
    vehicles, 
    log_dir,
    direction='left',
    min_number=1,
    max_number=1,
    within_distance=5,
    lateral_thresh=2
)

# Then from those motorcycles, find ones that also have vehicles on their right
motorcycles_between_vehicles = has_objects_in_relative_direction(
    motorcycles_with_left,
    vehicles,
    log_dir, 
    direction='right',
    min_number=1,
    max_number=1,
    within_distance=5,
    lateral_thresh=2
)

output_scenario(motorcycles_between_vehicles, description, log_dir, output_dir)