description = 'the vehicle behind another vehicle being crossed by a jaywalking pedestrian'

# Get all pedestrians and identify jaywalkers
peds = get_objects_of_category(log_dir, category='PEDESTRIAN')
# Jaywalking is defined as being on the road but not at a crossing
peds_on_road = on_road_lane(peds, log_dir)
jaywalking_peds = scenario_not(at_pedestrian_crossing)(peds_on_road, log_dir)

# Get moving vehicles that are in valid driving areas
vehicles = get_objects_of_category(log_dir, category='VEHICLE')
# Filter to only include vehicles that are both in drivable areas and not parked/stationary
moving_vehicles = scenario_and([
    in_drivable_area(vehicles, log_dir), 
    scenario_not(stationary)(vehicles, log_dir)
])

# Find vehicles being crossed by jaywalking pedestrians
crossed_vehicles = being_crossed_by(moving_vehicles, jaywalking_peds, log_dir)

# Find vehicles that are behind the vehicles being crossed
# Using 25m as a reasonable following distance threshold that would be relevant for planning
behind_crossed_vehicle = get_objects_in_relative_direction(
    crossed_vehicles, 
    moving_vehicles, 
    log_dir,
    direction='backward',
    max_number=1,  # Only get the closest following vehicle
    within_distance=25
)

output_scenario(behind_crossed_vehicle, description, log_dir, output_dir, is_gt=False)