description = 'vehicle two cars ahead is changing lanes'

# Get all vehicles
vehicles = get_objects_of_category(log_dir, category='VEHICLE')
moving_vehicles = scenario_not(stationary)(vehicles, log_dir)

# Find vehicles that are changing lanes
lane_changing_vehicles = changing_lanes(moving_vehicles, log_dir)

# Find vehicles that have a lane changing vehicle two cars ahead
# First get vehicles that have a vehicle directly in front of them
vehicles_with_leader = get_objects_in_relative_direction(moving_vehicles, moving_vehicles, log_dir, 
                                                       direction='forward', 
                                                       max_number=1,
                                                       within_distance=25)

# Then get vehicles that have a lane changing vehicle in front of their leader
vehicles_behind_lane_change = get_objects_in_relative_direction(vehicles_with_leader, lane_changing_vehicles, log_dir,
                                                              direction='forward',
                                                              max_number=1, 
                                                              within_distance=25)

output_scenario(vehicles_behind_lane_change, description, log_dir, output_dir)