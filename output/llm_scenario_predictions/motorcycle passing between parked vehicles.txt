description = 'motorcycle passing between parked vehicles'

# Get motorcycles and vehicles
motorcycles = get_objects_of_category(log_dir, category='MOTORCYCLE')
vehicles = get_objects_of_category(log_dir, category='VEHICLE')

# Find parked vehicles
parked_vehicles = stationary(vehicles, log_dir)

# Get moving motorcycles (not parked)
moving_motorcycles = scenario_not(stationary)(motorcycles, log_dir)

# Find motorcycles that have parked vehicles on both sides
# Using within_distance=3 to ensure vehicles are close enough to be considered "between"
# lateral_thresh=2 to ensure vehicles are roughly parallel to motorcycle's path
motorcycles_with_left_vehicle = has_objects_in_relative_direction(
    moving_motorcycles, 
    parked_vehicles, 
    log_dir, 
    direction='left', 
    min_number=1, 
    within_distance=3,
    lateral_thresh=2
)

# From motorcycles with left vehicle, find ones with right vehicle too
motorcycles_between_vehicles = has_objects_in_relative_direction(
    motorcycles_with_left_vehicle,
    parked_vehicles,
    log_dir,
    direction='right',
    min_number=1,
    within_distance=3,
    lateral_thresh=2
)

output_scenario(motorcycles_between_vehicles, description, log_dir, output_dir, is_gt=False)